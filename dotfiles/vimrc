" ==============================================================================
" Plugins
" ==============================================================================
set nocompatible
filetype off

function! AtGoogle()
  return filereadable(glob("$HOME/.at_google"))
endfunction

" Load Glug plugins and Google-specific settings
if AtGoogle()
  source $HOME/.google.vim
endif

" Load Vundle plugins
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Load Google/Home-specific Vundle plugins
if AtGoogle()
  source $HOME/.vundle_google.vim
else
  source $HOME/.vundle_home.vim
endif


" ---------------------------------
" bufexplorer
" ---------------------------------
Plugin 'jlanzarotta/bufexplorer'

let g:bufExplorerShowRelativePath = 1   " show relative paths
let g:bufExplorerSortBy = 'name'        " sort by filename
let g:bufExplorerSplitOutPathName = 1   " split the path and file name
let g:bufExplorerVertSize = 20          " new split windows size set by Vim
nnoremap <C-b> :ToggleBufExplorer<CR>


" ---------------------------------
" delimitMate
" ---------------------------------
Plugin 'Raimondi/delimitMate'
let g:delimitMate_expand_cr = 1


" ---------------------------------
" NERDTree
" ---------------------------------
Plugin 'scrooloose/nerdtree'

let g:NERDTreeWinSize = 40
noremap <C-n> :NERDTreeToggle<CR>


" ------------------------------------
" vim-airline
" ------------------------------------
Plugin 'bling/vim-airline'

let g:airline_theme = 'badwolf'
let g:airline#extensions#tabline#enabled = 1
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ':'
let g:airline#extensions#tabline#left_sep = ''
let g:airline#extensions#tabline#left_alt_sep = ''


" ---------------------------------
" vim-session / vim-misc
" ---------------------------------
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-session'

let g:session_autoload = 'no'
let g:session_autosave = 'no'
nnoremap <leader>ss :execute "SaveSession" getcwd()<CR>
nnoremap <leader>os :execute "OpenSession" getcwd()<CR>


" ---------------------------------
" Other plugins
" ---------------------------------
Plugin 'altercation/vim-colors-solarized'
Plugin 'groenewege/vim-less'
Plugin 'jelera/vim-javascript-syntax'
Plugin 'mattn/emmet-vim'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-surround'

call vundle#end()


" =============================================================================
" General
" =============================================================================
syntax on
filetype plugin indent on

set background=dark
colorscheme solarized
hi IncSearch cterm=standout ctermfg=10 ctermbg=7

set autoindent          " copy indent from current line when starting new line
set colorcolumn=81      " display vertical line margin
set expandtab           " enter spaces when tab is pressed
set hlsearch            " highlight last searched item
set ignorecase          " case insensitive search and substitute
set laststatus=2        " always show status line
set nohidden            " needed for BufExplorer split to work?
set number              " line number
set pastetoggle=<F10>   " toggle paste mode
set ruler               " display row and column of cursor (bottom right)
set shiftwidth=2        " number of spaces to use for auto indent
set showmatch           " show matching bracket
set smartcase           " case insensitive when searching all lowercase
set splitbelow          " make split to below
set splitright          " make vsplit to the right
set softtabstop=2       " setting to equal tabstop to use all spaces only
set tabstop=2           " use 2 spaces to represent tab

nnoremap <leader>t :enew<CR>
nnoremap <leader><tab> :bnext<CR>
nnoremap <leader>` :bprevious<CR>
nnoremap <leader>w :bd<CR>
nnoremap <leader>j :m .+1<CR>==
nnoremap <leader>k :m-2<CR>==
vnoremap <leader>j :m '>+1<CR>gv=gv
vnoremap <leader>k :m '<-2<CR>gv=gv
vnoremap <leader>s yq/p<CR>
inoremap <C-e> <Esc>A
inoremap <C-a> <Esc>I
