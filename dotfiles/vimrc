" =============================================================================
" Vundle
" =============================================================================
set nocompatible
filetype off

" Setup runtime path to include Vundle
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()


" ---------------------------------
" auto-pairs
" ---------------------------------
Plugin 'jiangmiao/auto-pairs'

let g:AutoPairsFlyMode = 0    " disable jump between open/close braces
let g:AutoPairsMapSpace = 0   " don't insert space between open/close braces


" ---------------------------------
" bufexplorer
" ---------------------------------
Plugin 'jlanzarotta/bufexplorer'

let g:bufExplorerSortBy = 'fullpath'    " sort by full path name
let g:bufExplorerSplitBelow = 1         " split new window below current
let g:bufExplorerSplitOutPathName = 0   " don't split path and file name
let g:bufExplorerVertSize = 20          " new split windows size set by Vim.
nnoremap <C-b> :ToggleBufExplorer<CR>


" ---------------------------------
" CtrlP
" ---------------------------------
Plugin 'kien/ctrlp.vim'
Plugin 'FelikZ/ctrlp-py-matcher'

if executable('ag')
  let g:ctrlp_user_command = 'ag %s -l -g ""
    \ --nocolor
    \ --hidden
    \ --ignore .git
    \ --ignore .idea
    \ --ignore .meteor
    \ --ignore .\*swp'
endif
let g:ctrlp_match_func = { 'match': 'pymatcher#PyMatch' }
let g:ctrlp_match_window = 'bottom,order:btt,min:1,max:20,results:20'


" ---------------------------------
" ESFormatter
" ---------------------------------
Plugin 'millermedeiros/vim-esformatter'

autocmd FileType javascript nnoremap <silent> <leader>es :Esformatter<CR>


" ---------------------------------
" NERDTree
" ---------------------------------
Plugin 'scrooloose/nerdtree'

let g:NERDTreeWinSize = 40
noremap <C-n> :NERDTreeToggle<CR>


" ---------------------------------
" Syntastic
" ---------------------------------
Plugin 'scrooloose/syntastic'

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_mode_map = {
    \ 'mode': 'passive',
    \ 'active_filetypes': [],
    \ 'passive_filetypes': ['html', 'css'] }

noremap <leader>sc :SyntasticCheck<CR>


" ---------------------------------
" TernJS
" ---------------------------------
Plugin 'marijnh/tern_for_vim'

let g:tern_show_argument_hints = 'on_move'
autocmd FileType javascript nnoremap <leader>tdf :TernDef<CR>
autocmd FileType javascript nnoremap <leader>tdc :TernDoc<CR>
autocmd FileType javascript nnoremap <leader>tdb :TernDocBrowse<CR>


" ------------------------------------
" vim-airline
" ------------------------------------
Plugin 'bling/vim-airline'

let g:airline_theme = 'badwolf'
let g:airline#extensions#tabline#enabled = 1
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ':'
let g:airline#extensions#tabline#left_sep = ''
let g:airline#extensions#tabline#left_alt_sep = ''


" ---------------------------------
" vim-session / vim-misc
" ---------------------------------
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-session'

let g:session_autoload = 'no'
let g:session_autosave = 'yes'
let g:session_autosave_periodic = 1
nnoremap <leader>ss :execute "SaveSession" getcwd()<CR>
nnoremap <leader>os :execute "OpenSession" getcwd()<CR>


" ---------------------------------
" YouCompleteMe
" ---------------------------------
Plugin 'Valloric/YouCompleteMe'

let g:ycm_autoclose_preview_window_after_completion = 1
let g:ycm_autoclose_preview_window_after_insertion = 1


" ---------------------------------
" Other plugins
" ---------------------------------
Plugin 'altercation/vim-colors-solarized'
Plugin 'groenewege/vim-less'
Plugin 'jelera/vim-javascript-syntax'
Plugin 'mattn/emmet-vim'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-surround'


call vundle#end()

" =============================================================================
" General
" =============================================================================

" Colors
syntax on
set background=dark
colorscheme solarized
hi IncSearch cterm=standout ctermfg=10 ctermbg=7

" Editing
set hlsearch            " highlight last searched item
set expandtab           " enter spaces when tab is pressed
set tabstop=2           " use 2 spaces to represent tab
set softtabstop=2       " setting to equal tabstop to use all spaces only
set shiftwidth=2        " number of spaces to use for auto indent
set autoindent          " copy indent from current line when starting new line
set colorcolumn=81      " display vertical line margin
set ruler               " display row and column of cursor (bottom right)
set number              " line number
set ignorecase          " case insensitive search and substitute
set smartcase           " case insensitive when searching all lowercase
set showmatch           " show matching bracket
set laststatus=2        " always show status line

set omnifunc=csscomplete#CompleteCSS " autocomplete CSS with <C-x><C-o>

nnoremap <leader>t :enew<CR>             " new buffer
nnoremap <leader><tab> :bnext<CR>        " next buffer
nnoremap <leader>` :bprevious<CR>        " previous buffer
nnoremap <leader>w :bd<CR>               " close current buffer
nnoremap <leader>j :m .+1<CR>==          " move current line up
nnoremap <leader>k :m-2<CR>==            " move current line down
vnoremap <leader>j :m '>+1<CR>gv=gv      " move visual block up
vnoremap <leader>k :m '<-2<CR>gv=gv      " move visual block down
vnoremap <leader>s yq/p<CR>              " search visual block

filetype plugin indent on
