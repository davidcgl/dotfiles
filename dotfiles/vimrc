" ==============================================================================
" Plugins
" ==============================================================================
set nocompatible
filetype off

function! AtGoogle()
  return filereadable(glob("$HOME/.at_google"))
endfunction

" Load Glug plugins
if AtGoogle()
  source $HOME/.google.vim
endif

" Load Vundle plugins
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" ---------------------------------
" bufexplorer
" ---------------------------------
Plugin 'jlanzarotta/bufexplorer'

let g:bufExplorerFindActive = 0         " do not go to active window
let g:bufExplorerShowRelativePath = 1   " show relative paths
let g:bufExplorerSortBy = 'name'        " sort by filename
let g:bufExplorerSplitOutPathName = 1   " split the path and file name
let g:bufExplorerVertSize = 20          " new split windows size set by Vim
nnoremap <C-b> :ToggleBufExplorer<CR>

" ------------------------------------
" delimitMate
" ------------------------------------
Plugin 'Raimondi/delimitMate'
let g:delimitMate_expand_cr = 1
let g:delimitMate_autoclose = 0 " do not add closing delimiter

" ---------------------------------
" ESFormatter
" ---------------------------------
Plugin 'millermedeiros/vim-esformatter'
autocmd FileType javascript nnoremap <silent> <leader>es :Esformatter<CR>

" ------------------------------------
" fzf.vim
" ------------------------------------
Plugin 'junegunn/fzf.vim'
if AtGoogle()
  set rtp+=~/.fzf/
else
  set rtp+=/usr/local/Cellar/fzf/HEAD
endif
nnoremap <C-p> :Files<CR>
nnoremap <C-f> :BLines<CR>
nnoremap <C-l> :Lines<CR>

" ---------------------------------
" Syntastic
" ---------------------------------
Plugin 'scrooloose/syntastic'
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_javascript_checkers = ['eslint']
let g:syntastic_mode_map = {
    \ 'mode': 'passive',
    \ 'active_filetypes': [],
    \ 'passive_filetypes': ['html', 'css'] }
noremap <leader>sc :SyntasticCheck<CR>

" ---------------------------------
" TernJS
" ---------------------------------
Plugin 'marijnh/tern_for_vim'
let g:tern_show_argument_hints = 'on_move'

" ---------------------------------
" UltiSnips
" ---------------------------------
Plugin 'SirVer/ultisnips'
Plugin 'cmather/vim-meteor-snippets'
Plugin 'honza/vim-snippets'
let g:UltiSnipsExpandTrigger = '<leader>e'

" ------------------------------------
" vim-airline
" ------------------------------------
Plugin 'bling/vim-airline'
let g:airline_theme = 'badwolf'
let g:airline#extensions#tabline#enabled = 1
if !exists('g:airline_symbols')
  let g:airline_symbols = {}
endif
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ':'
let g:airline#extensions#tabline#left_sep = ''
let g:airline#extensions#tabline#left_alt_sep = ''

" ---------------------------------
" vim-session / vim-misc
" ---------------------------------
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-session'
let g:session_autoload = 'no'
let g:session_autosave = 'yes'
let g:session_verbose_messages = 0
nnoremap <leader>ss :execute "SaveSession" getcwd()<CR>
nnoremap <leader>os :execute "OpenSession" getcwd()<CR>


" ---------------------------------
" YouCompleteMe
" ---------------------------------
if !AtGoogle()
  Plugin 'Valloric/YouCompleteMe'
  let g:ycm_autoclose_preview_window_after_completion = 1
  let g:ycm_autoclose_preview_window_after_insertion = 1
endif " !AtGoogle()

" ---------------------------------
" Other plugins
" ---------------------------------
Plugin 'altercation/vim-colors-solarized'
Plugin 'groenewege/vim-less'
Plugin 'mattn/emmet-vim'
Plugin 'mxw/vim-jsx'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'pangloss/vim-javascript'
Plugin 'tpope/vim-commentary'
Plugin 'tpope/vim-surround'

call vundle#end()

" =============================================================================
" Options
" =============================================================================
syntax on
filetype plugin indent on

set background=dark
colorscheme solarized
hi IncSearch cterm=bold ctermfg=7 ctermbg=5
hi Search cterm=bold ctermfg=0 ctermbg=7

set autoindent          " copy indent from current line when starting new line
set colorcolumn=81      " display vertical line margin
set expandtab           " enter spaces when tab is pressed
set hidden              " don't unload buffer
set history=1000        " keep last 1000 commands
set hlsearch            " highlight last searched item
set ignorecase          " case insensitive search and substitute
set incsearch           " search as you type
set laststatus=2        " always show status line
set number              " line number
set pastetoggle=<F10>   " toggle paste mode
set ruler               " display row and column of cursor (bottom right)
set shiftwidth=2        " number of spaces to use for auto indent
set showmatch           " show matching bracket
set smartcase           " case insensitive when searching all lowercase
set splitbelow          " make split to below
set splitright          " make vsplit to the right
set softtabstop=2       " setting to equal tabstop to use all spaces only
set tabstop=2           " use 2 spaces to represent tab

" Switch buffers
nnoremap <leader>t :enew<CR>
nnoremap <leader><tab> :bnext<CR>
nnoremap <leader>` :bprevious<CR>
nnoremap <leader>w :bd<CR>

" Move lines
nnoremap <leader>j :m .+1<CR>==
nnoremap <leader>k :m-2<CR>==
vnoremap <leader>j :m '>+1<CR>gv=gv
vnoremap <leader>k :m '<-2<CR>gv=gv
vnoremap <leader>s yq/p<CR>

" Move cursor to beginning or EOL
inoremap <C-e> <Esc>A
inoremap <C-a> <Esc>I

" Clear highlighting
nnoremap <C-h> :noh<CR>

" Strip trailing whitespace on save
au FileType cpp,css,go,html,java,javascript au BufWritePre <buffer> :%s/\s\+$//e

" Use // as commentstring
au FileType cpp,java,javascript setlocal commentstring=//\ %s
