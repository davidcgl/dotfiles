[alias]
  # Show current branch name.
  branch-name = !git rev-parse --abbrev-ref HEAD

  # Overwrite the last commit, don't ask.
  cane = commit --amend --no-edit

  # Commit with a message like "WIP 2024-04-04T12:34:56Z"
  commit-wip = !git commit --no-verify --message \"WIP $(date +%Y-%m-%dT%H:%M:%SZ)\"

  # Remove local branches that don't have a remote branch.
  cleanup = !git branch -vv | grep 'origin.*gone]' | awk '{print $1}' | xargs git branch -D

  # Shortcuts for git diff
  df = !git diff
  dfc = !git diff --cached
  dff = !git diff --name-only

  # Assumes that default branch is either master or main.
  get-default-branch = "!git branch -r | grep -q 'origin/master' && echo master || echo main"

  # Show all files different from main.
  dfm = !git diff --name-only $(git get-default-branch)...

  # Show the latest log.
  last = log -1 HEAD

  # Show all modified and untracked files.
  opened = !git ls-files --modified --others --exclude-standard

  # Publish branch upstream.
  publish = !git push -u origin $(git branch-name)

  # Shortcut for stash push, sync, and stash pop. Also rebase if not on default branch.
  # sync = !git stash && hub sync && git stash pop
  sync = "!f() { current=$(git branch-name); default=$(git get-default-branch); git stash; hub sync; [ \"$current\" != \"$default\" ] && git rebase \"$default\"; git stash pop; }; f"

  # Checkout a remote branch that isn't normally tracked, usually for review.
  remote-fetch = "!rf() { git config --add remote.origin.fetch +refs/heads/$1:refs/remotes/origin/$1; git fetch origin +$1:refs/remotes/origin/$1; }; rf"
  remote-purge = "!rp() { git config --unset remote.origin.fetch \".*$1.*\"; git update-ref -d refs/remotes/origin/$1; }; rp"

  # Stage generated files
  ls-generated = !git ls-files --modified --others --exclude-standard | grep generated
  add-generated = !git ls-generated | xargs git add

[core]
  excludesfile = ~/.gitignore
  fsmonitor = true
  pager = diff-so-fancy | less --tabs=4 -RF
  splitIndex = true
  untrackedCache = true

[fetch]
  writeCommitGraph = true

[commit]
  verbose = true

[credential]
  helper = osxkeychain

[diff]
  algorithm = histogram

[help]
  autoCorrect = 1

[log]
  # Always show local timestamp when running git log
	date = iso-local

[init]
  defaultBranch = main

[merge]
  conflictstyle = zdiff3

[push]
  # Push the current branch to update a branch with the same name on remote.
  default = current

  # If set to "true" assume --set-upstream on default push when no upstream
  # tracking exists for the current branch; this option takes effect with
  # push.default options simple, upstream, and current. It is useful if by
  # default you want new branches to be pushed to the default remote and you
  # also want the upstream tracking to be set.
  autoSetupRemote = true

[user]
  name = David Chen
  useConfigOnly = true

[color "diff"]
  commit = yellow bold
  frag = magenta bold
  meta = yellow
  new = green bold
  old = red bold
  whitespace = red reverse

[color "diff-highlight"]
  newHighlight = green bold 22
  newNormal = green bold
  oldHighlight = red bold 52
  oldNormal = red bold
