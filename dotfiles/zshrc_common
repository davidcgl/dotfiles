# ==============================================================================
# General
# ------------------------------------------------------------------------------

# History
HISTSIZE=1000000
SAVEHIST=1000000

# Use Emacs key bindings.
bindkey -e

# In Bash, Ctrl-u clears the text from cursor to the beginning of the line.
# In Zsh, Ctrl-u is bound to `kill-whole-line`. I almost never need to kill the
# whole line, so remapping this to match Bash's behavior.
bindkey \^U backward-kill-line

export EDITOR=nvim
export VISUAL=nvim
export TMUX_TMPDIR=/tmp

# Fuzzy Finder
# https://github.com/junegunn/fzf
export FZF_DEFAULT_COMMAND='fd --type f --hidden --exclude .git'
export FZF_ALT_C_COMMAND="fd --type d --hidden --exclude .git"
export FZF_CTRL_T_COMMAND="${FZF_DEFAULT_COMMAND}"
export FZF_CTRL_R_OPTS="--exact"

if [[ -e ${HOME}/.fzf.zsh ]]; then
  source ${HOME}/.fzf.zsh
fi

# Base16-shell
# https://github.com/chriskempson/base16-shell
# BASE16_SHELL=${HOME}/.config/base16-shell/
# [[ -n "$PS1" ]] && [[ -s "$BASE16_SHELL/profile_helper.sh" ]] && source "$BASE16_SHELL/profile_helper.sh"

# Zoxide
eval "$(zoxide init zsh)"

# Make copy-paste work the same across OSX and Ubuntu.
if [[ "$OSTYPE" == linux* ]]; then
 if (( $+commands[xclip] )); then
    alias pbcopy='xclip -selection clipboard -in'
    alias pbpaste='xclip -selection clipboard -out'
  elif (( $+commands[xsel] )); then
    alias pbcopy='xsel --clipboard --input'
    alias pbpaste='xsel --clipboard --output'
  fi
fi

alias pbc='pbcopy'
alias pbp='pbpaste'


# Make `ls` show colorful output on Mac OSX.
# See `man ls` for description of LSCOLORS.
export LSCOLORS='exfxcxdxbxGxDxabagacad'
alias ls="ls -G"


# ==============================================================================
# Aliases
# ------------------------------------------------------------------------------

alias l="ls -1A"
alias ll="ls -lh"
alias la="ls -lhA"
alias ga="git add"
alias gb="git branch"
alias gbd="git branch -d"
alias gbD="git branch -D"
alias gco="git checkout"
alias gc="git commit --verbose"
alias gca="git commit --verbose --all"
alias gcam="git commit --verbose --all --message"
alias gcm="git commit --verbose --message"
alias gf="git fetch"
alias ghpr="gh pr list --author "@me" --json number,url,title --jq '.[] | \"[#\(.number)](\(.url)) \(.title)\"'"
alias ghprall="gh pr list --author "@me" --json number,url,title --jq '.[] | \"[#\(.number)](\(.url)) \(.title)\"' --state all --limit 10000"
alias ghpropen="gh pr list --author "@me" --json number,url,title --jq '.[] | \"[#\(.number)](\(.url)) \(.title)\"' --state open"
alias gl="git log --topo-order --date='format-local:%Y-%m-%d %H:%M:%S' \
  --pretty=format:'%C(bold)Commit:%C(reset) %C(yellow)%H%C(auto)%d%n%C(bold)Author:%C(reset) %C(blue)%an <%ae>%n%C(bold)Date:%C(reset)   %C(magenta)%ad (%ar)%C(reset)%n%n%w(0,4,4)%B%n'"
alias glb="git log --topo-order --date='format-local:%Y-%m-%d %H:%M:%S' \
  --format='%C(yellow)%h%C(reset) %C(white)%s%C(reset)%C(auto)%d%C(reset)'"
alias glo="git log --topo-order --date='format-local:%Y-%m-%d %H:%M:%S' \
  --format='%C(yellow)%h%C(reset) %C(magenta)%ad%C(reset) %C(blue)%aN%C(reset) %C(white)%s%C(reset)%C(auto)%d%C(reset)'"
alias glor="git log --topo-order --date=relative \
  --format='%C(yellow)%h%C(reset) %C(magenta)%ad%C(reset) %C(blue)%aN%C(reset) %C(white)%s%C(reset)%C(auto)%d%C(reset)'"
alias glg="git log --graph --all --date='format-local:%Y-%m-%d %H:%M:%S' \
  --format='%C(yellow)%h%C(reset) %C(magenta)%ad%C(reset) %C(blue)%aN%C(reset) %C(white)%s%C(reset)%C(auto)%d%C(reset)'"
alias glgr="git log --graph --all --date=relative \
  --format='%C(yellow)%h%C(reset) %C(magenta)%ad%C(reset) %C(blue)%aN%C(reset) %C(white)%s%C(reset)%C(auto)%d%C(reset)'"
alias gls="git log --topo-order --date='format-local:%Y-%m-%d %H:%M:%S' --stat \
  --pretty=format:'%C(bold)Commit:%C(reset) %C(yellow)%H%C(auto)%d%n%C(bold)Author:%C(reset) %C(blue)%an <%ae>%n%C(bold)Date:%C(reset)   %C(magenta)%ad (%ar)%C(reset)%n%n%w(0,4,4)%B%n'"
alias gld="git log --topo-order --date='format-local:%Y-%m-%d %H:%M:%S' --stat --patch --full-diff \
  --pretty=format:'%C(bold)Commit:%C(reset) %C(yellow)%H%C(auto)%d%n%C(bold)Author:%C(reset) %C(blue)%an <%ae>%n%C(bold)Date:%C(reset)   %C(magenta)%ad (%ar)%C(reset)%n%n%w(0,4,4)%B%n'"
alias gp="git push"
alias gpf="git push --force-with-lease"
alias gr="git rebase"
alias gra="git rebase --abort"
alias grc="git rebase --continue"
alias gri="git rebase --interactive"
alias gst="git status"
alias gso="git status -uno"
alias gsi="git switch"
alias gsp="git stash push"
alias gspp="git stash pop"
alias hb="hub browse"
alias hc="hub compare"
alias hs="hub sync"
alias rgs="rg --no-filename --no-heading --no-line-number"
alias ta="tmux attach"
alias tl="tmux list-sessions"
alias urldecode="python -c \"import sys, urllib.parse; \
  print(urllib.parse.unquote_plus(sys.argv[1]))\""
alias urlencode="python -c \"import sys, urllib.parse; \
  print(urllib.parse.quote_plus(sys.argv[1]))\""

# ==============================================================================
# Functions
# ------------------------------------------------------------------------------

# Print 256 colors
print_colors() {
  for i in $(seq 0 255); do
    printf '\033[1;38;5;%dmcolor %d\n' "$i" "$i"
  done
}

# Fuzzy checkout git branch
gcf() {
 git checkout "$(git branch | fzf | tr -d '[:space:]')"
}
